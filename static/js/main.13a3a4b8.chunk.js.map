{"version":3,"sources":["index.js"],"names":["GNCalc","calc","bind","handleChange","handleDrop","state","values","lane","y","h","scroll","convert","this","a","parseFloat","yh","green","aciidxgn","b","lr2hs","c","GN","setState","bb","HS","evt","target","name","value","convType","striped","bordered","condensed","Control","as","onChange","type","placeholder","React","Component","WNCalc","w","lr2x","lr2y","winx","winy","white","aciidxwn","Rlr2","Rwin","WN","LR2LANE","CalcForm","switch","calculator","calctype","className","bsStyle","bsSize","block","onClick","xs","md","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a3a4b8.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Table, Container, Row, Col, FormControl, Form, Button} from 'react-bootstrap';\nimport './bootstrap.min.css';\n\nclass GNCalc extends React.Component {\n  constructor() {\n    super();\n    this.calc = this.calc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.state = {values: {\n        lane: 0,\n        y: 480,\n        h: 2,\n        scroll: 100\n      },\n      convert: 'lr2toiidx'\n    };\n  }\n\n  calc() {\n    const values = this.state.values;\n    let a = parseFloat(10 * (2173/725 * 1000));\n    let y = parseFloat(this.state.values.y);\n    let h = parseFloat(this.state.values.h);\n    let yh = y + h;\n    let green = parseFloat(this.state.values.aciidxgn);\n    let scroll = parseFloat(this.state.values.scroll);\n    let lane = parseFloat(this.state.values.lane);\n    let highspeed = parseFloat(this.state.values.lr2hs);\n    let hsandscroll = highspeed * scroll;\n    let b = yh / hsandscroll;\n    let c = parseFloat(1 - (lane / 100));\n    let GN = a * b * c;\n\n    if (this.state.convert === \"lr2toiidx\") {\n      values['aciidxgn'] = GN;\n      this.setState({values: values});\n    } \n\n    if (this.state.convert === \"iidxtolr2\") {\n      let bb = parseFloat((y + h) / (green * scroll));\n      let HS = parseFloat(a * bb * c);\n      values['lr2hs'] = HS;\n      this.setState({values: values});\n    }\n  }\n\n  handleChange(evt) {\n    const values = this.state.values;\n    values[`${evt.target.name}`] = evt.target.value;\n    this.setState({values: values});\n    this.calc();\n  }\n\n  handleDrop(evt) {\n    let convType = evt.target.value;\n    this.setState({convert: convType});\n  }\n\n  render() {\n\n    return (\n\n      <Table striped bordered condensed>\n        <tr>\n        <td>Conversion Type</td>\n        <td>\n          <Form.Control as=\"select\" value={this.state.convert} onChange={this.handleDrop} >\n            <option value=\"lr2toiidx\">LR2 to AC IIDX</option>\n            <option value=\"iidxtolr2\">AC IIDX to LR2</option>\n           </Form.Control>\n        </td>\n        <td>Either LR2 to ACIIDX or ACIIDX to LR2</td>\n        </tr>\n\n        <tr>\n        <td>LR2 HIGHSPEED</td>\n        <td><FormControl type=\"text\" value={this.state.values.lr2hs} name=\"lr2hs\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>The HS setting you use in LR2. Only use this form if you want to calculate your AC IIDX GN equivalent.</td>\n        </tr>\n\n        <tr>\n        <td>AC IIDX GREEN NUMBER</td>\n        <td><FormControl type=\"text\" value={this.state.values.aciidxgn} name=\"aciidxgn\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>The GN setting you use in AC IIDX. Only use this form if you want to calculate your LR2 HS equivalent.</td>\n        </tr>\n\n        <tr>\n        <td>DST_LINE.y</td>\n        <td><FormControl type=\"text\" value={this.state.values.y} name=\"y\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Open your lr2skin csv file, CTRL+F #DST_LINE and enter the <b>4th</b> number. IE: DST_LINE,0,0,25,<b>320</b>,144,1. Default: W-MIX</td>\n        </tr>\n\n        <tr>\n        <td>DST_LINE.h</td>\n        <td><FormControl type=\"text\" value={this.state.values.h} name=\"h\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Open your lr2skin csv file, CTRL+F #DST_LINE and enter the <b>6th</b> number. IE: DST_LINE,0,0,25,320,144,<b>1</b>. Default: W-MIX</td>\n        </tr>\n\n        <tr>\n        <td>BASE SPEED (LR2)</td>\n        <td><FormControl type=\"text\" value={this.state.values.scroll} name=\"scroll\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Found in the Options tab before starting LR2.</td>\n        </tr>\n\n        <tr>\n        <td>LANE COVER (LR2)</td>\n        <td><FormControl type=\"text\" value={this.state.values.lane} name=\"lane\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>The amount of lane cover you use in LR2 from 0-100.</td>\n        </tr>\n\n      </Table>\n    )\n  }\n}\n\nclass WNCalc extends React.Component {\n  constructor() {\n    super();\n    this.calc = this.calc.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.state = {values: {\n        y: 480,\n        h: 2,\n        w: 377,\n        lr2x: 1280,\n        lr2y: 720,\n        winx: 1920,\n        winy: 1080\n      },\n      convert: 'lr2toiidx'\n    };\n  }\n\n  calc() {\n    const values = this.state.values;\n    let y = parseFloat(this.state.values.y);\n    let h = parseFloat(this.state.values.h);\n    let w = parseFloat(this.state.values.w);\n    let white = parseFloat(this.state.values.aciidxwn);\n    let lane = parseFloat(this.state.values.lane);\n    let lr2x = parseFloat(this.state.values.lr2x);\n    let lr2y = parseFloat(this.state.values.lr2y);\n    let winx = parseFloat(this.state.values.winx);\n    let winy = parseFloat(this.state.values.winy);\n    let Rlr2 = parseFloat(lr2x / lr2y);\n    let Rwin = parseFloat(winx / winy);\n\n    if (this.state.convert === \"lr2toiidx\") {\n      let WN = 1000 * (1 - (288/482) * ((y+h)/w) * (Rlr2/Rwin) * (1 - lane/100))\n      values['aciidxwn'] = WN;\n      this.setState({values: values});\n\n    } \n    if (this.state.convert === \"iidxtolr2\") {\n      let LR2LANE = 100 * (1 - (482/288) * (w/(y+h)) * (Rwin/Rlr2) * (1 - white/1000));\n      values['lane'] = LR2LANE;\n      this.setState({values: values});\n    }\n\n  }\n\n  handleChange(evt) {\n    const values = this.state.values;\n    values[`${evt.target.name}`] = evt.target.value;\n    this.setState({values: values});\n    this.calc();\n  }\n\n  handleDrop(evt) {\n    let convType = evt.target.value;\n    this.setState({convert: convType});\n  }\n\n  render() {\n\n    return (\n\n      <Table striped bordered condensed >\n\n        <tr>\n        <td>Conversion Type</td>\n        <td>\n          <Form.Control as=\"select\" value={this.state.convert} onChange={this.handleDrop} >\n            <option value=\"lr2toiidx\">LR2 to AC IIDX</option>\n            <option value=\"iidxtolr2\">AC IIDX to LR2</option>\n           </Form.Control>\n        </td>\n        <td>Either LR2 to ACIIDX or ACIIDX to LR2</td>\n        </tr>\n\n        <tr>\n        <td>LR2 LANE COVER</td>\n        <td><FormControl type=\"text\" value={this.state.values.lane} name=\"lane\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>The Lane Cover setting you use in LR2. Only use this form if you want to calculate your AC IIDX WN equivalent.</td>\n        </tr>\n\n        <tr>\n        <td>AC IIDX WHITE NUMBER</td>\n        <td><FormControl type=\"text\" value={this.state.values.aciidxwn} name=\"aciidxwn\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>The WN setting you use in AC IIDX. Only use this form if you want to calculate your LR2 Lane Cover equivalent.</td>\n        </tr>\n\n        <tr>\n        <td>DST_LINE.y</td>\n        <td><FormControl type=\"text\" value={this.state.values.y} name=\"y\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Open your lr2skin csv file, CTRL+F #DST_LINE and enter the <b>4th</b> number. IE: DST_LINE,0,0,25,<b>320</b>,144,1. Default: W-MIX Wide</td>\n        </tr>\n\n        <tr>\n        <td>DST_LINE.w</td>\n        <td><FormControl type=\"text\" value={this.state.values.w} name=\"w\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Open your lr2skin csv file, CTRL+F #DST_LINE and enter the <b>5th</b> number. IE: DST_LINE,0,0,25,320,<b>144</b>,1. Default: W-MIX Wide</td>\n        </tr>\n\n        <tr>\n        <td>DST_LINE.h</td>\n        <td><FormControl type=\"text\" value={this.state.values.h} name=\"h\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Open your lr2skin csv file, CTRL+F #DST_LINE and enter the <b>6th</b> number. IE: DST_LINE,0,0,25,320,144,<b>1</b>. Default: W-MIX Wide</td>\n        </tr>\n\n        <tr>\n        <td>LR2 Resolution X</td>\n        <td><FormControl type=\"text\" value={this.state.values.lr2x} name=\"lr2x\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Found in the Options tab before starting LR2. Usually it's 640 for SD and 1280 or 1920 for LR2HD.</td>\n        </tr>\n\n        <tr>\n        <td>LR2 Resolution Y</td>\n        <td><FormControl type=\"text\" value={this.state.values.lr2y} name=\"lr2y\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>Found in the Options tab before starting LR2. Usually it's 480 for SD and 720 or 1080 for LR2HD.</td>\n        </tr>\n\n        <tr>\n        <td>LR2 Window X</td>\n        <td><FormControl type=\"text\" value={this.state.values.winx} name=\"winx\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>This is the size of the window LR2 is run at. Should be your monitor size if running the game full screen.</td>\n        </tr>\n\n        <tr>\n        <td>LR2 Window Y</td>\n        <td><FormControl type=\"text\" value={this.state.values.winy} name=\"winy\" placeholder=\"Enter text\" onChange={this.handleChange} /></td>\n        <td>This is the size of the window LR2 is run at. Should be your monitor size if running the game full screen.</td>\n        </tr>\n\n      </Table>\n    )\n  }\n}\n\nclass CalcForm extends React.Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {switch: false};\n  }\n\n  handleChange() {\n    if (!this.state.switch) {\n      this.setState({switch: true});\n    } else {\n      this.setState({switch: false});\n    }\n  }\n\n  render() {\n    let calculator\n    let calctype\n    if (this.state.switch) {\n      calctype = \"Show Green Number Calculator\"\n      calculator = <WNCalc />\n    } else {\n      calctype = \"Show White Number Calculator\"\n      calculator = <GNCalc />\n    }\n    return (\n      <Container>\n        <Row className=\"show-grid\">\n          <Button bsStyle=\"primary\" bsSize=\"large\" block className=\"calctoggle\" onClick={this.handleChange}>\n          {calctype}\n          </Button>\n          <Col xs={12} md={12}>{calculator}</Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nReactDOM.render(<CalcForm />,document.getElementById('root'));"],"sourceRoot":""}